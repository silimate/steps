#=========================================================================
# Cadence Genus Synthesis
#=========================================================================
# Author : Alex Carsello, James Thomas
# Date   : July 14, 2020
#

fullname: Cadence Genus Synthesis
category: Logic Synthesis
description: Runs vanilla Cadence Genus flow
name: cadence-genus-synthesis
container: silimate/eda-docker:latest

#-------------------------------------------------------------------------
# Inputs and Outputs
#-------------------------------------------------------------------------

inputs:
  - adk/
  - rtl/
  - constraints.tcl

outputs:
  - design.v
  - design.sdc
  - design.sdf
  - design.spef
  - design.namemap
  - design.db
  - design.lib
  - design.loads
  - design.metrics.json
  - fv/

#-------------------------------------------------------------------------
# Commands
#-------------------------------------------------------------------------

commands:
  - mkdir -p outputs/rpts
  - genus -no_gui -f START.tcl -log logs/genus.log
  - mv outputs/*.rpt outputs/rpts
  - mv outputs/design.*.sdc outputs/design.sdc
  - mv outputs/*.db outputs/design.db
  - mv fv outputs

#-------------------------------------------------------------------------
# Parameters
#-------------------------------------------------------------------------

parameters:
  design_name: undefined
  clock_period: 1.0
  # Automatic fine-grain clock gating
  gate_clock: True
  # Uniquify by prefixing every module in the design with the design name.
  # This is useful for hierarchical LVS when multiple blocks use modules
  # with the same name but different definitions.
  uniquify_with_design_name: True
  flatten_effort: 0
  read_hdl_defines: ""
  order: designer-interface.tcl,setup-session.tcl,read-design.tcl,constraints.tcl,compile.tcl,generate-results.tcl

#-------------------------------------------------------------------------
# Debug
#-------------------------------------------------------------------------

debug:
  - genus -no_gui -f results_syn/syn_out.genus_setup.tcl

#-------------------------------------------------------------------------
# Assertions
#-------------------------------------------------------------------------

preconditions:

  - assert Tool( 'genus' )                   # tool check
  - assert File( 'inputs/adk' )              # must exist
  - assert File( 'inputs/design.v' )         # must exist
  - assert File( 'inputs/constraints.tcl' )  # must exist

postconditions:

  - assert File( 'outputs/design.v' )        # must exist
  - assert File( 'outputs/design.sdc' )      # must exist
  - assert File( 'outputs/design.sdf' )      # must exist
  - assert File( 'outputs/design.spef' )      # must exist

  # Basic error checking

  - assert 'Cannot resolve reference' not in File( 'logs/genus.log' )
  - assert 'Error   :' not in File( 'logs/genus.log' )

  # Sanity check that there is a clock in the constraints

  - assert 'create_clock' in File( 'outputs/design.sdc' )

